name: "Staging - Provision Infra"

on:
  push:
    paths:
      - "terraform/**"
    branches:
      - master
  pull_request:
    paths:
      - "terraform/**"

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_DEVELOPMENT_SA_KEY}}

jobs:
  Provision:
    name: "Provision Staging Infra"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Setup gcloud environment
      #   uses: GoogleCloudPlatform/github-actions@master
      #   with:
      #     version: 290.0.1
      #     service_account_key: ${{ secrets.GCP_DEVELOPMENT_SA_KEY}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@master

      - name: Terraform Format
        id: fmt
        run: |
          cd ./terraform/staging 
          terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          cd ./terraform/staging
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          cd ./terraform/staging
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          cd ./terraform/staging
          terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          cd ./terraform/staging
          terraform apply -auto-approve
